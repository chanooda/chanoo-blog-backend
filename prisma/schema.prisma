generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Folder {
  id       Int      @id @default(autoincrement())
  name     String
  parentId Int?
  parent   Folder?  @relation("ParentChildFolder", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  child    Folder[] @relation("ParentChildFolder")

  @@index([parentId])
}

model Series {
  id     Int      @id @default(autoincrement())
  name   String
  writes Writes[]
}

model Tags {
  id        Int          @id @default(autoincrement())
  name      String
  writeTags WritesTags[] 
}

model Writes {
  id        Int          @id @default(autoincrement())
  title     String
  seriesId  Int?
  content   String       @db.LongText
  isPublish Boolean
  series    Series?      @relation(fields: [seriesId], references: [id], onDelete: SetNull)
  writeTags WritesTags[] 
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  @@index([seriesId])
}

model WritesTags {
  id      Int    @id @default(autoincrement())
  tagId   Int
  writeId Int
  tags    Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  write   Writes @relation(fields: [writeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([tagId])
  @@index([writeId])
}
